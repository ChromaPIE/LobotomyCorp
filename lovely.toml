[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if self.STATE == self.STATES.BUFFOON_PACK then"
position = "before"
payload = '''
if self.STATE == self.STATES.EXTRACTION_PACK then
    self:update_extraction_pack(dt)
end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "(self.config.type == 'deck' and self ~= G.deck) or"
position = "before"
payload = "(self.config.type == 'hand' and state == G.STATES.EXTRACTION_PACK) or"
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "(G.STATE == G.STATES.BUFFOON_PACK and G.STATES.BUFFOON_PACK) or"
position = "before"
payload = "(G.STATE == G.STATES.EXTRACTION_PACK and G.STATES.EXTRACTION_PACK) or"
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "prev_state == G.STATES.SPECTRAL_PACK or prev_state == G.STATES.STANDARD_PACK or"
position = "after"
payload = "prev_state == G.STATES.EXTRACTION_PACK or"
match_indent = false

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.rental then badges[#badges + 1] = 'rental' end"
position = "after"
payload = '''
if self.ability.laetitia_gift then badges[#badges + 1] = 'lobc_gift' end
if self.ability.price_of_silence_amplified then badges[#badges + 1] = 'lobc_amplified' end
if self.ability.plague_doctor_baptism then 
    if G.GAME.blind and G.GAME.blind.config.blind.key == "bl_lobc_whitenight" then
        badges[#badges + 1] = 'lobc_apostle'
    else
        if not G.GAME.pool_flags["whitenight_defeated"] then
            badges[#badges + 1] = 'lobc_blessed'
        else
            badges[#badges + 1] = 'lobc_blessed_wn'
        end
    end
end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v == 'rental' then info_queue[#info_queue+1] = {key = 'rental', set = 'Other', vars = {G.GAME.rental_rate or 1}} end"
position = "after"
payload = '''
if v == 'lobc_gift' then info_queue[#info_queue+1] = {key = 'lobc_gift', set = 'Other'} end
if v == 'lobc_amplified' then
    local count = G.PROFILES[G.SETTINGS.profile].joker_usage["j_lobc_price_of_silence"] and G.PROFILES[G.SETTINGS.profile].joker_usage["j_lobc_price_of_silence"].count or 0
    info_queue[#info_queue+1] = {key = 'lobc_amplified'..(count < 5 and '_1' or ''), set = 'Other'}
end
if v == 'lobc_blessed' then info_queue[#info_queue+1] = {key = 'lobc_blessed', set = 'Other'} end
if v == 'lobc_blessed_wn' then info_queue[#info_queue+1] = {key = 'lobc_blessed_wn', set = 'Other'} end
if v == 'lobc_apostle' then info_queue[#info_queue+1] = {key = 'lobc_apostle', set = 'Other'} end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "localize{type = 'other', key = 'undiscovered_'..(string.lower(_c.set)), set = _c.set, nodes = desc_nodes}"
position = "at"
payload = '''
if _c.set == "Joker" and _c.abno then
    localize{type = 'other', key = 'und_'.._c.key, set = _c.set, nodes = desc_nodes}
else
    localize{type = 'other', key = 'undiscovered_'..(string.lower(_c.set)), set = _c.set, nodes = desc_nodes}
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}"
position = "at"
payload = '''
if _c.set == "Joker" and _c.abno then
    full_UI_table.name = localize{type = 'name', key = 'und_'.._c.key, set = 'Other', name_nodes = {}, vars = specific_vars or {}}
else
    full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if not self.config.center.discovered and (self.ability.consumeable or self.config.center.unlocked) and not self.config.center.demo and not self.bypass_discovery_center then"
position = "after"
payload = "if not (self.ability.set == \"Joker\" and self.config.center.abno) then"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "shared_sprite:draw_shader('dissolve', nil, nil, nil, self.children.center, scale_mod, rotate_mod)"
position = "after"
payload = "end"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "(G.STATE == G.STATES.SPLASH and '') or"
position = "after"
payload = '''
((G.GAME and G.GAME.blind and G.GAME.blind.config.blind.key == "bl_lobc_whitenight") and "lobc_music_third_warning") or
(G.STATE == G.STATES.EXTRACTION_PACK and "lobc_music_abno_choice") or
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "(self.T.y < G.CARD_H*0.8) and 'bm' or"
position = "after"
payload = "(self.config.center.abno and self.T.y < G.CARD_H*1.2) and 'bm' or"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.pinned then"
position = "before"
payload = '''
if self.config.center_key == "j_lobc_shy_look" then
    self.children.mood.role.draw_major = self
    self.children.mood:draw_shader('dissolve', 0, nil, nil, self.children.center, scale_mod, rotate_mod,nil, 0.1 + 0.03*math.sin(1.8*G.TIMERS.REAL),nil, 0.6)
    self.children.mood:draw_shader('dissolve', nil, nil, nil, self.children.center, scale_mod, rotate_mod)
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = "if key == \"2\" then"
position = "after"
payload = "G.PROFILES[G.SETTINGS.profile].joker_usage[_card.config.center.key] = {count = _card.config.center.discover_rounds or 0, order = _card.config.center.order, wins = {}, losses = {}}"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "if (#parts._2 == 2) or (#parts._3 == 1 and #parts._2 == 1) then"
position = "at"
payload = "if (#parts._2 >= 2) or (#parts._3 == 1 and #parts._2 == 1) then"
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if G.GAME.chips - G.GAME.blind.chips >= 0 or G.GAME.current_round.hands_left < 1 then"
position = "at"
payload = "if to_big(G.GAME.chips) >= to_big(G.GAME.blind.chips) or G.GAME.current_round.hands_left <= 0 then"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "local label_scale = 0.5"
position = "before"
payload = '''
if score == 'defeated_by' and G.GAME.lobc_death_text then 
    score_tab[1].nodes[1].config.object:remove()
    score_tab[1].nodes = {
        {n=G.UIT.O, config={object = DynaText({string = G.GAME.lobc_death_text, colours = {G.C.WHITE},shadow = true, float = true,maxw = 2.2, scale = 0.45})}}
    }
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "local blind_amt = get_blind_amount(G.GAME.round_resets.blind_ante)*blind_choice.config.mult*G.GAME.starting_params.ante_scaling"
position = "after"
payload = '''
if G.GAME.modifiers.lobc_all_whitenight and blind_choice.config.key == "bl_lobc_whitenight" then
    if G.GAME.round_resets.blind_ante == 1 then blind_amt = blind_amt / 6 end
    if G.GAME.round_resets.blind_ante == 2 then blind_amt = blind_amt / 3 end
    if G.GAME.round_resets.blind_ante == 3 then blind_amt = blind_amt / 2 end
end
'''
match_indent = true


[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "localization/en-us.lua"
pattern = "\"{C:attention}Straights{} can be\","
position = "before"
payload = "\"{C:attention}Gays{} can be\","
match_indent = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if self.STATE == self.STATES.BUFFOON_PACK then"
position = "before"
payload = '''
if self.STATE == self.STATES.EXTRACTION_PACK then
    self:update_extraction_pack(dt)
end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "(self.config.type == 'deck' and self ~= G.deck) or"
position = "before"
payload = "(self.config.type == 'hand' and state == G.STATES.EXTRACTION_PACK) or"
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "(G.STATE == G.STATES.BUFFOON_PACK and G.STATES.BUFFOON_PACK) or"
position = "before"
payload = "(G.STATE == G.STATES.EXTRACTION_PACK and G.STATES.EXTRACTION_PACK) or"
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "prev_state == G.STATES.SPECTRAL_PACK or prev_state == G.STATES.STANDARD_PACK or"
position = "after"
payload = "prev_state == G.STATES.EXTRACTION_PACK or"
match_indent = false

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.rental then badges[#badges + 1] = 'rental' end"
position = "after"
payload = '''
if self.ability.laetitia_gift then badges[#badges + 1] = 'lobc_gift' end
if self.ability.plague_doctor_baptism then 
    if G.GAME.blind and G.GAME.blind.config.blind.key == "bl_lobc_whitenight" then
        badges[#badges + 1] = 'lobc_apostle'
    else
        if not G.GAME.pool_flags["whitenight_defeated"] then
            badges[#badges + 1] = 'lobc_blessed'
        else
            badges[#badges + 1] = 'lobc_blessed_wn'
        end
    end
end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v == 'rental' then info_queue[#info_queue+1] = {key = 'rental', set = 'Other', vars = {G.GAME.rental_rate or 1}} end"
position = "after"
payload = '''
if v == 'lobc_gift' then info_queue[#info_queue+1] = {key = 'lobc_gift', set = 'Other'} end
if v == 'lobc_blessed' then info_queue[#info_queue+1] = {key = 'lobc_blessed', set = 'Other'} end
if v == 'lobc_blessed_wn' then info_queue[#info_queue+1] = {key = 'lobc_blessed_wn', set = 'Other'} end
if v == 'lobc_apostle' then info_queue[#info_queue+1] = {key = 'lobc_apostle', set = 'Other'} end
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "localize{type = 'other', key = 'undiscovered_'..(string.lower(_c.set)), set = _c.set, nodes = desc_nodes}"
position = "at"
payload = '''
if _c.set == "Joker" and _c.abno then
    localize{type = 'other', key = 'und_'.._c.key, set = _c.set, nodes = desc_nodes}
else
    localize{type = 'other', key = 'undiscovered_'..(string.lower(_c.set)), set = _c.set, nodes = desc_nodes}
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}"
position = "at"
payload = '''
if _c.set == "Joker" and _c.abno then
    full_UI_table.name = localize{type = 'name', key = 'und_'.._c.key, set = 'Other', name_nodes = {}, vars = specific_vars or {}}
else
    full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if not self.config.center.discovered and (self.ability.consumeable or self.config.center.unlocked) and not self.config.center.demo and not self.bypass_discovery_center then"
position = "after"
payload = "if not (self.ability.set == \"Joker\" and self.config.center.abno) then"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "shared_sprite:draw_shader('dissolve', nil, nil, nil, self.children.center, scale_mod, rotate_mod)"
position = "after"
payload = "end"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "(G.STATE == G.STATES.SPLASH and '') or"
position = "after"
payload = "((G.GAME and G.GAME.blind and G.GAME.blind.config.blind.key == \"bl_lobc_whitenight\") and \"lobc_third_warning\") or"
match_indent = true